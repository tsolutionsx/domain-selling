generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("POSTGRES_PRISMA_URL")
    directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Chains {
    id    Int    @id @default(autoincrement())
    name  Chain  @unique
    users User[]
}

model User {
    id            Int      @id @default(autoincrement())
    walletAddress String
    dateJoined    DateTime @default(now())
    chainId       Int
    // emailId       Int
    domains       Domain[]
    chain         Chains   @relation(fields: [chainId], references: [id])

    email    String?
    verified Boolean @default(false)

    @@unique([walletAddress, chainId])
}

model Domain {
    id         Int    @id @default(autoincrement())
    domainName String

    mainImgUrl String?
    bannerURL  String?
    location   String?
    bio        String?  @default("Add your bio here")
    name       String?
    category   Category @default(DigitalCreator)
    dateJoined DateTime @default(now())

    User   User? @relation(fields: [userId], references: [id])
    userId Int?

    followers Follows[] @relation("followers")
    following Follows[] @relation("following")

    website           String  @default("https://app.znsconnect.io") @map(name: "website_url")
    discord           String  @default("https://discord.com/invite/skbA5Ucmmc") @map(name: "discord_url")
    youtube           String  @default("https://www.youtube.com/@znsconnect") @map(name: "youtube_url")
    twitter           String  @default("https://twitter.com/ZNSConnect") @map(name: "twitter_url")
    telegram          String  @default("https://t.me/znsconnect") @map(name: "telegram_url")
    instagram         String  @default("https://www.instagram.com") @map(name: "instagram_url")
    linkedin          String  @default("https://www.linkedin.com") @map(name: "linkedin_url")
    websiteVerified   Boolean @default(false)
    discordVerified   Boolean @default(false)
    youtubeVerified   Boolean @default(false)
    twitterVerified   Boolean @default(false)
    telegramVerified  Boolean @default(false)
    instagramVerified Boolean @default(false)
    linkedinVerified  Boolean @default(false)

    @@unique([domainName, userId])
}

model Follows {
    followers   Domain @relation("followers", fields: [followerId], references: [id])
    followerId  Int
    following   Domain @relation("following", fields: [followingId], references: [id])
    followingId Int

    @@id([followerId, followingId])
}

enum Category {
    DigitalCreator
    BlockchainEnthusiast
    SocialCreator
    FinancialWizard
    TechInnovator
    Gamer
}

enum Chain {
    ZETA
    BERA
    X1
    OPBNB
}
